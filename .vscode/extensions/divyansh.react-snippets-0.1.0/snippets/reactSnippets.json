{
	
	 "Print to console": {
	 	"scope": "javascript,typescript",
	 	"prefix": "log",
	 	"body": [
	 		"console.log('$1');",
	 		"$2"
	 	],
	 	"description": "Log output to console"
	 },
		"route": {
			"prefix": "route",
			"body": "<Route path=\"${1}\" component={${2}} />${3}",
			"description": "route"
		},
		"propTypeSingle": {
			"prefix": "_propType",
			"body": "${1}: React.PropTypes.${2},${3}",
			"description": "propTypeSingle"
		},
		"preventDefault": {
			"prefix": "preventDefault",
			"body": "(e) => { e.preventDefault(); ${1}}",
			"description": "preventDefault"
		},
		"historyPush": {
			"prefix": "push",
			"body": "history.push(${1});",
			"description": "historyPush"
		},
		"loading": {
			"prefix": "loading",
			"body": "{isLoading ? <CircularLoading /> : ${1}}",
			"description": "loading"
		},
		"instance": {
			"prefix": "instance",
			"body": "ref={(instance) => { this.child = instance; }}",
			"description": "instance"
		},
		"container": {
			"prefix": "container",
			"body": "import { Meteor } from 'meteor/meteor';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport ${1} from '../components/${1}';\n\nexport default createContainer((${2}) => {\n  ${3}\n  return { ${4} };\n}, ${1});",
			"description": "container"
		},
		"funcComponent": {
			"prefix": "funcComponent",
			"body": "import React from 'react';\n\nconst ${1} = () => (\n  <div>\n  ${2}\n  </div>\n);\n\nexport default ${1};\n\n${1}.propTypes = {\n};",
			"description": "funcComponent"
		},
		"classComponent": {
			"prefix": "classComponent",
			"body": "import React, { Component } from 'react';\n\nclass ${1} extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { variable: 0 };\n  }\n\n  render() {\n    return (\n      <div>\n      ${2}\n      </div>\n    );\n  }\n}\n\nexport default ${1};\n\n${1}.propTypes = {\n};",
			"description": "classComponent"
		},
		"styles": {
			"prefix": "styles",
			"body": "const styles = {\n  ${1}: {\n    ${2}: ${3},\n  },\n};",
			"description": "styles"
		},
		"styleOne": {
			"prefix": "styleOne",
			"body": "${1}: {\n  ${2}: ${3},\n},",
			"description": "styleOne"
		},
		"page": {
			"prefix": "page",
			"body": "import React from 'react';\nimport Layout from '../layouts/${1}Layout';\nimport ${2} from '../${3}/${2}';\n\nexport default class ${4} extends React.Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <${2} />\n        </Layout>\n      </div>\n    );\n  }\n}\n",
			"description": "page"
		},
		"_iconImport": {
			"prefix": "_iconImport",
			"body": "import ${1} from 'material-ui/svg-icons/${2}';${3}",
			"description": "_iconImport"
		},
		"_mobx": {
			"prefix": "_mobx",
			"body": "import { observer${1}, observable } from 'mobx-react/native';\nimport { mobxStore } from '.${2}./mobxStore';${3}",
			"description": "_mobx"
		},
		"_lang": {
			"prefix": "_lang",
			"body": "import { lang } from '../../locales/i18n';${3}",
			"lang": {
				"prefix": "lang",
				"body": "{lang('settings.${1}')}"
			},
			"description": "_lang"
		},
		"Material Colors": {
			"prefix": "_mColors",
			"body": "import { ${1} } from 'material-ui/styles/colors';${2}",
			"description": "Material Colors"
		},
		"_material-ui": {
			"prefix": "_material-ui",
			"body": "import ${1} from 'material-ui/${1}';${2}",
			"description": "_material-ui"
		},
		"_color": {
			"prefix": "_color",
			"body": "import { ${1} } from '../stylesheets/color';${2}",
			"description": "_color"
		},
		"withRouter": {
			"prefix": "_iWith",
			"body": "import { withRouter } from 'react-router';${1}",
			"description": "withRouter"
		},
		"importMeteor": {
			"prefix": "_iMeteor",
			"body": "import { Meteor } from 'meteor/meteor';",
			"description": "importMeteor"
		},
		"importComponent": {
			"prefix": "_c",
			"body": "import ${1} from '${2}/${1}';${3}",
			"description": "importComponent"
		},
		"handler": {
			"prefix": "handler",
			"body": "const ${1}Subscription = Meteor.subscribe('${2}'${3});\nconst is${4}Loading = !${1}Subscription.ready();${5}\nif (!is${4}Loading) {\n  ${6}\n}",
			"description": "handler"
		},
		"propTypes": {
			"prefix": "propTypes",
			"body": "${1}.propTypes = {\n  ${2}: React.PropTypes.element.isRequired,\n};\n${3}",
			"description": "propTypes"
		}
	}

